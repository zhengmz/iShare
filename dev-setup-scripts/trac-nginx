1. install trac
   a. install python2.6
   b. install setuptool, so we can use "easy_install" command.
   c. install Genshi, using "easy_install Genshi"
   d. install Babel, support for internationalization
   e. install trac, using "easy_install trac"

   if using mysql, must intall MySQL-python ( yum install )

2. initenv a project
   trac-admin /opt/trac/rcs initenv

3. Generating the Trac deploy directory
      trac-admin /opt/trac/svnproj deploy /tmp/deploy
      mv /tmp/deploy /var/www/trac

     /var/www/htdocs/favicon.ico
     /var/www/htdocs/site/flowsea_logo.png

4. Running Trac on a nginx Web Server

   有两种模式
   a. 是通过FastCGI方式来处理，但不支持多项目，需要自己在nginx中配置

      参考网址：
      http://trac.edgewall.org/wiki/TracNginxRecipe
      http://trac.edgewall.org/wiki/TracFastCgi
      http://lukejin.iteye.com/blog/646536

   b. 利用nginx 的转发proxy_pass功能来实现, 后端使用tracd来运行

      参考网址: http://trac.edgewall.org/wiki/TracNginxRecipe

      - tracd 启动命令

      tracd -d -s -p 8000 --basic-auth="*,/opt/trac/web_auth,trac realm" --group=apache --user=apache /opt/trac/project1 /opt/trac/project2
      tracd -d -p 8000 --basic-auth="*,/opt/trac/web_auth,trac realm" --group=apache --user=apache /opt/trac/project1 /opt/trac/project2
      tracd -d -p 8000 --group=apache --user=apache --env-parent-dir=/opt/trac

     - nginx 中的配置文件trac.conf

upstream trac_flowsea_com {
        # 对一个项目目录或父目录, tracd可以启动多个端口的instance来响应请求
        # 实现负载均衡
        server  127.0.0.1:8000;
        server  127.0.0.1:8001;
}
server {
        listen          80;
        server_name     trac.flowsea.com trac;

        access_log      /var/log/nginx/trac_access.log main;
        error_log       /var/log/nginx/trac_error.log;

        location / {
                proxy_pass      http://trac_flowsea_com;
				proxy_redirect          off;
                proxy_set_header        Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ ^/([0-9a-zA-Z\-]*)/login {
                auth_basic           "trac realm";
                auth_basic_user_file /opt/trac/web_auth;
                proxy_pass http://trac_flowsea_com;
        }

        location ~ ^/([0-9a-zA-Z\-]*)/chrome(.*)$ {
                alias /var/www/trac/htdocs$2;
        }
}

5. Granting admin rights to the admin user:
   trac-admin /opt/trac/rcs permission add zhengmz TRAC_ADMIN

6. 设置权限

   chown -R apache.apache /opt/trac/rcs

   如果使用selinux，还需要设置
   Step1: chcon -R -t httpd_sys_rw_content_t /opt/trac
   Step2: semanage fcontext -a -t httpd_sys_rw_content_t "/opt/trac(/.*)?"

7. 编写启动脚本

   tracd.sh

INSTANCES="8000 8001"
USER="apache"
GROUP="apache"
#ENV="/opt/trac"
ENV="/opt/trac/rcs"
PIDFILE="/var/run/trac/inst"
AUTH="--basic-auth=*,${ENV}/web_auth,Flowsea"
#ARGS="-e ${ENV}"
ARGS="-s ${ENV}"
PYTHON_EGG_CACHE="/opt/trac/.egg_cache"

function start()
{
    export PYTHON_EGG_CACHE
    for I in $INSTANCES; do
        #/usr/bin/tracd -d -p ${I} --pidfile=${PIDFILE}.${I} ${AUTH} --user=${USER} --group=${GROUP} ${ARGS}
        /usr/bin/tracd -d -p ${I} --pidfile=${PIDFILE}.${I} --user=${USER} --group=${GROUP} ${ARGS}
    done
}

function stop()
{
   for x in `ls ${PIDFILE}.*`; do
       kill `cat ${x}`
       done
}

$1

8. 可以使用chkconfig来自动启动, 编写的脚本


#! /bin/sh
#
# chkconfig:   - 86 14
# description:	Trac Server Process Manager
# processname: tracd
# pidfile: /var/run/trac/inst.pid
#

# Source function library.
. /etc/init.d/functions

# Check that networking is up.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

tracd="/usr/bin/tracd"
prog=$(basename $tracd)
lockfile="/var/lock/subsys/tracd"
pidfile="/var/run/trac/inst"

trac_instances="8000 8001"
#trac_env="/opt/trac"
trac_env="/opt/trac/rcs"
#AUTH="--basic-auth=*,${trac_env}/web_auth,Flowsea"
#ARGS="-e ${trac_env}"
prog_args="--user=apache --group=apache -s ${trac_env}"
PYTHON_EGG_CACHE="/opt/trac/.egg_cache"

start(){
	echo -n $"Starting $prog: "
	export PYTHON_EGG_CACHE
	for I in $trac_instances; do
        	#${tracd} -d -p ${I} --pidfile=${PIDFILE}.${I} ${AUTH} --user=${USER} --group=${GROUP} ${ARGS}
        	daemon ${tracd} -d -p ${I} --pidfile=${pidfile}.${I} ${prog_args}
	done
	retval=$?
	echo
	[ $retval -eq 0 ] && touch ${lockfile}
	return $retval
}

stop(){
	echo -n $"Stopping $prog: "
	for x in `ls ${pidfile}.*`; do
		#kill `cat ${x}`
    		killproc -p $x $prog
	done
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f ${lockfile} ${pidfile}.*
	return $retval
}

restart () {
        stop
        start
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status -p ${pidfile}.*
	RETVAL=$?
	;;
  restart)
	restart
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart}"
	RETVAL=2
        ;;
esac

exit $RETVAL

FAQ:
   Q. 如果nginx报权限不够，可能的原因是selinux打开
   A: 先用sestatus -v查看, 如果打开，可临时关掉，再试试, 用lynx来浏览

